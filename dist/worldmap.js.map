{"version":3,"sources":["../src/worldmap.js"],"names":["_","L","antPath","Colors","tileServers","url","attribution","subdomains","WorldMap","ctrl","mapContainer","circles","lineCoords","extraLineLayers","markerLayers","linesLayer","lineColor","first","panel","colors","drawTrail","showTrail","antPathDelay","useCustomAntPathColor","customAntPathColor","antPathColor","antPathPulseColor","extraLineColors","showAsAntPath","createMap","window","Icon","Default","imagePath","mapCenter","latLng","parseFloat","mapCenterLatitude","mapCenterLongitude","map","worldCopyJump","center","zoom","parseInt","initialZoom","setMouseWheelZoom","selectedTileServer","tileServer","tileLayer","maxZoom","reuseTiles","detectRetina","addTo","legend","control","position","onAdd","_div","DomUtil","create","update","thresholds","data","legendHtml","index","length","innerHTML","locations","sort","dataPoints","isEqual","filter","o","hideEmpty","isNil","value","hideZero","circlesLayer","clearLayers","removeCircles","filterEmptyAndZeroValues","needToRedrawCircles","clearCircles","createCircles","clearPolyLine","drawPolyLine","drawExtraLines","combined","Array","from","push","group","featureGroup","fitBounds","getBounds","updateCircles","forEach","dataPoint","locationName","c","createCircle","getColor","getLatLng","lat","lng","addCircles","removeLines","layer","dataset","resultArr","locationLatitude","locationLongitude","self","marker","title","dataIdx","random","polyline","toCoords","color","drawMarkers","circle","find","cir","options","location","key","setRadius","calcCircleSize","setStyle","fillColor","fillOpacity","unbindPopup","createPopup","valueRounded","circleMarker","radius","dataPointValue","circleMinSize","circleMaxSize","valueRange","dataFactor","lowestValue","circleSizeRange","unit","unitSingular","unitPlural","label","trim","bindPopup","point","stickyLabels","on","onMouseOver","evt","target","bringToFront","openPopup","onMouseOut","closePopup","invalidateSize","panTo","mapCenterMoved","remove","mouseWheelZoom","scrollWheelZoom","disable","enable","layerGroup","removeLayer","flag","delay","useCustomColor","pulseColor","color1","color2","pathColor1","pathColor2","zoomFactor","setZoom","removeLegend"],"mappings":"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","file":"worldmap.js","sourcesContent":["import _ from 'lodash';\n/* eslint-disable id-length, no-unused-vars */\nimport L from './libs/leaflet';\n/* eslint-disable id-length, no-unused-vars */\nimport {antPath} from './libs/leaflet-ant-path';\n/* eslint class-methods-use-this: [\"error\", { \"exceptMethods\": [\"toCoords\"] }] */\nimport Colors from './colors';\n\n\nconst tileServers = {\n  'CartoDB Positron': {\n    url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png',\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n    subdomains: 'abcd'\n  },\n  'CartoDB Dark': {\n    url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png',\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n    subdomains: 'abcd'\n  },\n  'Open Street Maps': {\n    url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    subdomains: 'abc'\n  },\n  'Stamen Maps': {\n    url: 'http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png',\n    attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, under <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. Data by <a href=\"http://openstreetmap.org\">OpenStreetMap</a>, under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>.',\n    subdomains: 'abc'\n\n  },\n  'Esri Standard': {\n    url: 'https://server.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer/tile/{z}/{x}/{y}',\n    attribution: 'Powered by <a href=\"https://www.esri.com/\">Esri</a>| Esri, DeLorme, HERE, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), MapmyIndia, Tomtom',\n    subdomains: ''\n\n  },\n  'Esri Transportation': {\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{x}/{y}',\n    attribution: 'Powered by <a href=\"https://www.esri.com/\">Esri</a>| Esri, DeLorme, HERE, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), MapmyIndia, Tomtom',\n    subdomains: ''\n\n  },\n  'Esri Terrain': {\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{x}/{y}',\n    attribution: 'Powered by <a href=\"https://www.esri.com/\">Esri</a>| Esri, DeLorme, HERE, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), MapmyIndia, Tomtom',\n    subdomains: ''\n\n  }\n};\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.circles = [];\n    this.lineCoords = [];\n    this.extraLineLayers = [];\n    this.markerLayers = [];\n    this.linesLayer = null;\n    this.lineColor = _.first(this.ctrl.panel.colors);\n    this.drawTrail = this.ctrl.panel.showTrail;\n    this.antPathDelay = this.ctrl.panel.antPathDelay;\n    this.useCustomAntPathColor = this.ctrl.panel.customAntPathColor;\n    this.antPathColor = this.ctrl.panel.antPathColor;\n    this.antPathPulseColor = this.ctrl.panel.antPathPulseColor;\n    this.extraLineColors = this.ctrl.panel.extraLineColors;\n\n    this.showAsAntPath = true;\n    return this.createMap();\n  }\n\n  createMap() {\n    window.L.Icon.Default.imagePath = 'public/plugins/grafana-custom-worldmap-panel/images/';\n    const mapCenter = window.L.latLng(parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude));\n    this.map = window.L.map(this.mapContainer, { worldCopyJump: true, center: mapCenter, zoom: parseInt(this.ctrl.panel.initialZoom, 10) || 1 });\n    this.setMouseWheelZoom();\n\n    const selectedTileServer = tileServers[this.ctrl.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map);\n  }\n\n  createLegend() {\n    this.legend = window.L.control({position: 'bottomleft'});\n    this.legend.onAdd = () => {\n      this.legend._div = window.L.DomUtil.create('div', 'info legend');\n      this.legend.update();\n      return this.legend._div;\n    };\n\n    this.legend.update = () => {\n      const thresholds = this.ctrl.data[0].thresholds;\n      let legendHtml = '';\n      legendHtml += '<div class=\"legend-item\"><i style=\"background:' + this.ctrl.panel.colors[0] + '\"></i> ' +\n          '&lt; ' + thresholds[0] + '</div>';\n      for (let index = 0; index < thresholds.length; index += 1) {\n        legendHtml +=\n          '<div class=\"legend-item\"><i style=\"background:' + this.ctrl.panel.colors[index + 1] + '\"></i> ' +\n          thresholds[index] + (thresholds[index + 1] ? '&ndash;' + thresholds[index + 1] + '</div>' : '+');\n      }\n      this.legend._div.innerHTML = legendHtml;\n    };\n    this.legend.addTo(this.map);\n  }\n\n  needToRedrawCircles(data) {\n    if (this.circles.length === 0 && data.length > 0) return true;\n\n    if (this.circles.length !== data.length) return true;\n    const locations = _.map(_.map(this.circles, 'options'), 'location').sort();\n    const dataPoints = _.map(data, 'key').sort();\n    return !_.isEqual(locations, dataPoints);\n  }\n\n  filterEmptyAndZeroValues(data) {\n    return _.filter(data, (o) => { return !(this.ctrl.panel.hideEmpty && _.isNil(o.value)) && !(this.ctrl.panel.hideZero && o.value === 0); });\n  }\n\n  clearCircles() {\n    if (this.circlesLayer) {\n      this.circlesLayer.clearLayers();\n      this.removeCircles(this.circlesLayer);\n      this.circles = [];\n    }\n  }\n\n  drawCircles() {\n    const data = this.filterEmptyAndZeroValues(this.ctrl.data[0]);\n\n    if (this.needToRedrawCircles(data)) {\n      this.clearCircles();\n      this.createCircles(data);\n      this.clearPolyLine();\n      if (this.drawTrail) {\n        const linesLayer = this.drawPolyLine();\n        const extraLineLayers = this.drawExtraLines();\n        const combined = Array.from(extraLineLayers);\n        combined.push(linesLayer);\n        const group = window.L.featureGroup(combined);\n        this.map.fitBounds(group.getBounds());\n      }\n    } else {\n      this.updateCircles(data);\n    }\n  }\n\n  createCircles(data) {\n    const circles = [];\n    data.forEach((dataPoint) => {\n      if (!dataPoint.locationName) return;\n      const c = this.createCircle(dataPoint);\n      this.lineColor = this.getColor(dataPoint.value);\n      if (this.drawTrail) {\n        this.lineCoords.push([c.getLatLng().lat, c.getLatLng().lng]);\n      }\n      circles.push(c);\n    });\n    this.circlesLayer = this.addCircles(circles);\n    this.circles = circles;\n  }\n\n  clearPolyLine() {\n    if (this.linesLayer) {\n      this.removeLines(this.linesLayer);\n    }\n    if (this.extraLineLayers) {\n      this.extraLineLayers.forEach((layer) => {\n        this.removeLines(layer);\n      });\n    }\n    if (this.markerLayers) {\n      this.markerLayers.forEach((layer) => {\n        this.removeLines(layer);\n      });\n    }\n  }\n\n  toCoords(dataset) {\n    const resultArr = [];\n\n    dataset.forEach((dataPoint) => {\n      resultArr.push([dataPoint.locationLatitude, dataPoint.locationLongitude]);\n    });\n\n    return resultArr;\n  }\n\n  drawMarkers(dataset) {\n    const self = this;\n    dataset.forEach((dataPoint) => {\n      if (dataPoint.marker) {\n        const marker = window.L.marker([dataPoint.locationLatitude, dataPoint.locationLongitude], {\n          title: dataPoint.marker\n        }).addTo(this.map);\n        self.markerLayers.push(marker);\n      }\n    });\n    return this.markerLayers;\n  }\n\n  drawExtraLines() {\n    const self = this;\n    if (!this.ctrl.data || this.ctrl.data.length < 1) {\n      return;\n    }\n\n    for (let dataIdx = 1; dataIdx < this.ctrl.data.length; dataIdx += 1) {\n      const lineColor = (this.extraLineColors && this.extraLineColors.length >= dataIdx)\n        ? this.extraLineColors[dataIdx - 1] : Colors.random();\n      const layer = window.L.polyline(self.toCoords(this.ctrl.data[dataIdx]), {\n        color: lineColor\n      }).addTo(this.map);\n      this.extraLineLayers.push(layer);\n      self.drawMarkers(this.ctrl.data[dataIdx]);\n      return this.extraLineLayers;\n    }\n  }\n\n  drawPolyLine() {\n    if (this.showAsAntPath) {\n      this.linesLayer = window.L.polyline.antPath(this.lineCoords, {\n        'delay': this.antPathDelay,\n        'dashArray': [10, 20],\n        'weight': 5,\n        'color': (this.useCustomAntPathColor ? this.antPathColor : this.lineColor),\n        'pulseColor': (this.useCustomAntPathColor ? this.antPathPulseColor : '#FFFFFF'),\n        'paused': false,\n        'reverse': false\n      }).addTo(this.map);\n    } else {\n      this.linesLayer = window.L.polyline(this.lineCoords, {\n        color: this.lineColor\n      }).addTo(this.map);\n    }\n    return this.linesLayer;\n  }\n\n  updateCircles(data) {\n    data.forEach((dataPoint) => {\n      if (!dataPoint.locationName) return;\n\n      const circle = _.find(this.circles, (cir) => { return cir.options.location === dataPoint.key; });\n\n      if (circle) {\n        circle.setRadius(this.calcCircleSize(dataPoint.value || 0));\n        circle.setStyle({\n          color: this.getColor(dataPoint.value),\n          fillColor: this.getColor(dataPoint.value),\n          fillOpacity: 0.5,\n          location: dataPoint.key,\n        });\n        circle.unbindPopup();\n        this.createPopup(circle, dataPoint.locationName, dataPoint.valueRounded);\n      }\n    });\n  }\n\n  createCircle(dataPoint) {\n    const circle = window.L.circleMarker([dataPoint.locationLatitude, dataPoint.locationLongitude], {\n      radius: this.calcCircleSize(dataPoint.value || 0),\n      color: this.getColor(dataPoint.value),\n      fillColor: this.getColor(dataPoint.value),\n      fillOpacity: 0.5,\n      location: dataPoint.key\n    });\n\n    this.createPopup(circle, dataPoint.locationName, dataPoint.valueRounded);\n    return circle;\n  }\n\n  calcCircleSize(dataPointValue) {\n    const circleMinSize = parseInt(this.ctrl.panel.circleMinSize, 10) || 2;\n    const circleMaxSize = parseInt(this.ctrl.panel.circleMaxSize, 10) || 30;\n\n    if (this.ctrl.data[0].valueRange === 0) {\n      return circleMaxSize;\n    }\n\n    const dataFactor = (dataPointValue - this.ctrl.data[0].lowestValue) / this.ctrl.data[0].valueRange;\n    const circleSizeRange = circleMaxSize - circleMinSize;\n\n    return (circleSizeRange * dataFactor) + circleMinSize;\n  }\n\n  createPopup(circle, locationName, value) {\n    const unit = value && value === 1 ? this.ctrl.panel.unitSingular : this.ctrl.panel.unitPlural;\n    const label = (locationName + ': ' + value + ' ' + (unit || '')).trim();\n    circle.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    circle.on('mouseover', function onMouseOver(evt) {\n      const layer = evt.target;\n      layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      circle.on('mouseout', function onMouseOut() {\n        circle.closePopup();\n      });\n    }\n  }\n\n  getColor(value) {\n    for (let index = this.ctrl.data[0].thresholds.length; index > 0; index -= 1) {\n      if (value >= this.ctrl.data[0].thresholds[index - 1]) {\n        return this.ctrl.panel.colors[index];\n      }\n    }\n    return _.first(this.ctrl.panel.colors);\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.remove(this.map);\n    this.legend = null;\n  }\n\n  setMouseWheelZoom() {\n    if (!this.ctrl.panel.mouseWheelZoom) {\n      this.map.scrollWheelZoom.disable();\n    } else {\n      this.map.scrollWheelZoom.enable();\n    }\n  }\n\n  addCircles(circles) {\n    return window.L.layerGroup(circles).addTo(this.map);\n  }\n\n  removeCircles() {\n    this.map.removeLayer(this.circlesLayer);\n  }\n\n  removeLines(layer) {\n    this.map.removeLayer(layer);\n  }\n\n  showTrail(flag) {\n    this.drawTrail = flag;\n    if (!this.drawTrail) {\n      this.clearPolyLine();\n    }\n  }\n\n  setAntPathOptions(delay, useCustomColor, color, pulseColor) {\n    this.useCustomAntPathColor = useCustomColor;\n    this.antPathDelay = delay;\n    this.antPathColor = color;\n    this.antPathPulseColor = pulseColor;\n  }\n\n  setPathColors(color1, color2) {\n    this.pathColor1 = color1;\n    this.pathColor2 = color2;\n  }\n\n  setExtraLineColors(colors) {\n    this.extraLineColors = colors;\n  }\n\n  setShowAsAntPath(flag) {\n    this.showAsAntPath = flag;\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n\n  remove() {\n    this.circles = [];\n    if (this.circlesLayer) this.removeCircles();\n    if (this.legend) this.removeLegend();\n    this.map.remove();\n  }\n}\n"]}